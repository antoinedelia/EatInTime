<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EatInTimeDataSet" targetNamespace="http://tempuri.org/EatInTimeDataSet.xsd" xmlns:mstns="http://tempuri.org/EatInTimeDataSet.xsd" xmlns="http://tempuri.org/EatInTimeDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EatInTimeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EatInTimeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EatInTimeClient.Properties.Settings.GlobalReference.Default.EatInTimeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AvancementTableAdapter" GeneratorDataComponentClassName="AvancementTableAdapter" Name="Avancement" UserDataComponentName="AvancementTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.Avancement" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Avancement] WHERE (([Id_Avancement] = @Original_Id_Avancement) AND ([Nom_Avancement] = @Original_Nom_Avancement))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Avancement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Avancement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Avancement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Avancement" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Avancement] ([Nom_Avancement]) VALUES (@Nom_Avancement);
SELECT Id_Avancement, Nom_Avancement FROM Avancement WHERE (Id_Avancement = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Avancement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Avancement" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Avancement, Nom_Avancement FROM dbo.Avancement</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Avancement] SET [Nom_Avancement] = @Nom_Avancement WHERE (([Id_Avancement] = @Original_Id_Avancement) AND ([Nom_Avancement] = @Original_Nom_Avancement));
SELECT Id_Avancement, Nom_Avancement FROM Avancement WHERE (Id_Avancement = @Id_Avancement)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Avancement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Avancement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Avancement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Avancement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Avancement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Avancement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_Avancement" ColumnName="Id_Avancement" DataSourceName="EatInTime.dbo.Avancement" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_Avancement" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_Avancement" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Avancement" DataSetColumn="Id_Avancement" />
              <Mapping SourceColumn="Nom_Avancement" DataSetColumn="Nom_Avancement" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CommandeTableAdapter" GeneratorDataComponentClassName="CommandeTableAdapter" Name="Commande" UserDataComponentName="CommandeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.Commande" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Commande] WHERE (([Id_Commande] = @Original_Id_Commande) AND ([Date_Commande] = @Original_Date_Commande) AND ([Id_Avancement] = @Original_Id_Avancement) AND ([Id_Table] = @Original_Id_Table))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Commande" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Commande" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date_Commande" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_Commande" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Avancement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Avancement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Commande] ([Date_Commande], [Id_Avancement], [Id_Table]) VALUES (@Date_Commande, @Id_Avancement, @Id_Table);
SELECT Id_Commande, Date_Commande, Id_Avancement, Id_Table FROM Commande WHERE (Id_Commande = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date_Commande" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_Commande" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Avancement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Avancement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Table" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Commande, Date_Commande, Id_Avancement, Id_Table FROM dbo.Commande</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Commande] SET [Date_Commande] = @Date_Commande, [Id_Avancement] = @Id_Avancement, [Id_Table] = @Id_Table WHERE (([Id_Commande] = @Original_Id_Commande) AND ([Date_Commande] = @Original_Date_Commande) AND ([Id_Avancement] = @Original_Id_Avancement) AND ([Id_Table] = @Original_Id_Table));
SELECT Id_Commande, Date_Commande, Id_Avancement, Id_Table FROM Commande WHERE (Id_Commande = @Id_Commande)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date_Commande" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_Commande" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Avancement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Avancement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Table" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Commande" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Commande" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date_Commande" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date_Commande" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Avancement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Avancement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_Commande" ColumnName="Id_Commande" DataSourceName="EatInTime.dbo.Commande" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_Commande" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_Commande" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Commande" DataSetColumn="Id_Commande" />
              <Mapping SourceColumn="Date_Commande" DataSetColumn="Date_Commande" />
              <Mapping SourceColumn="Id_Avancement" DataSetColumn="Id_Avancement" />
              <Mapping SourceColumn="Id_Table" DataSetColumn="Id_Table" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="contientTableAdapter" GeneratorDataComponentClassName="contientTableAdapter" Name="contient" UserDataComponentName="contientTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.contient" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[contient] WHERE (([Id_Commande] = @Original_Id_Commande) AND ([Id_Plat] = @Original_Id_Plat))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Commande" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Commande" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[contient] ([Id_Commande], [Id_Plat]) VALUES (@Id_Commande, @Id_Plat);
SELECT Id_Commande, Id_Plat FROM contient WHERE (Id_Commande = @Id_Commande) AND (Id_Plat = @Id_Plat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Commande" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Commande" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Commande, Id_Plat FROM dbo.contient</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[contient] SET [Id_Commande] = @Id_Commande, [Id_Plat] = @Id_Plat WHERE (([Id_Commande] = @Original_Id_Commande) AND ([Id_Plat] = @Original_Id_Plat));
SELECT Id_Commande, Id_Plat FROM contient WHERE (Id_Commande = @Id_Commande) AND (Id_Plat = @Id_Plat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Commande" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Commande" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Commande" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Commande" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Commande" DataSetColumn="Id_Commande" />
              <Mapping SourceColumn="Id_Plat" DataSetColumn="Id_Plat" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmplacementTableAdapter" GeneratorDataComponentClassName="EmplacementTableAdapter" Name="Emplacement" UserDataComponentName="EmplacementTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.Emplacement" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Emplacement] WHERE (([Id_Emplacement] = @Original_Id_Emplacement) AND ([Nom_Emplacement] = @Original_Nom_Emplacement))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Emplacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Emplacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Emplacement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Emplacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Emplacement] ([Nom_Emplacement]) VALUES (@Nom_Emplacement);
SELECT Id_Emplacement, Nom_Emplacement FROM Emplacement WHERE (Id_Emplacement = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Emplacement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Emplacement" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Emplacement, Nom_Emplacement FROM dbo.Emplacement</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Emplacement] SET [Nom_Emplacement] = @Nom_Emplacement WHERE (([Id_Emplacement] = @Original_Id_Emplacement) AND ([Nom_Emplacement] = @Original_Nom_Emplacement));
SELECT Id_Emplacement, Nom_Emplacement FROM Emplacement WHERE (Id_Emplacement = @Id_Emplacement)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Emplacement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Emplacement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Emplacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Emplacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Emplacement" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Emplacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_Emplacement" ColumnName="Id_Emplacement" DataSourceName="EatInTime.dbo.Emplacement" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_Emplacement" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_Emplacement" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Emplacement" DataSetColumn="Id_Emplacement" />
              <Mapping SourceColumn="Nom_Emplacement" DataSetColumn="Nom_Emplacement" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="est_composeTableAdapter" GeneratorDataComponentClassName="est_composeTableAdapter" Name="est_compose" UserDataComponentName="est_composeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.est_compose" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[est_compose] WHERE (([Id_Plat] = @Original_Id_Plat) AND ([Id_Ingredient] = @Original_Id_Ingredient))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[est_compose] ([Id_Plat], [Id_Ingredient]) VALUES (@Id_Plat, @Id_Ingredient);
SELECT Id_Plat, Id_Ingredient FROM est_compose WHERE (Id_Ingredient = @Id_Ingredient) AND (Id_Plat = @Id_Plat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Plat, Id_Ingredient FROM dbo.est_compose</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[est_compose] SET [Id_Plat] = @Id_Plat, [Id_Ingredient] = @Id_Ingredient WHERE (([Id_Plat] = @Original_Id_Plat) AND ([Id_Ingredient] = @Original_Id_Ingredient));
SELECT Id_Plat, Id_Ingredient FROM est_compose WHERE (Id_Ingredient = @Id_Ingredient) AND (Id_Plat = @Id_Plat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Plat" DataSetColumn="Id_Plat" />
              <Mapping SourceColumn="Id_Ingredient" DataSetColumn="Id_Ingredient" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="IngredientTableAdapter" GeneratorDataComponentClassName="IngredientTableAdapter" Name="Ingredient" UserDataComponentName="IngredientTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.Ingredient" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Ingredient] WHERE (([Id_Ingredient] = @Original_Id_Ingredient) AND ([Nom_Ingredient] = @Original_Nom_Ingredient) AND ([Allergene_Ingredient] = @Original_Allergene_Ingredient) AND ([Stock_Ingredient] = @Original_Stock_Ingredient))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Ingredient" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Allergene_Ingredient" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Allergene_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Ingredient] ([Nom_Ingredient], [Allergene_Ingredient], [Stock_Ingredient]) VALUES (@Nom_Ingredient, @Allergene_Ingredient, @Stock_Ingredient);
SELECT Id_Ingredient, Nom_Ingredient, Allergene_Ingredient, Stock_Ingredient FROM Ingredient WHERE (Id_Ingredient = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Ingredient" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Allergene_Ingredient" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Allergene_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Ingredient, Nom_Ingredient, Allergene_Ingredient, Stock_Ingredient FROM dbo.Ingredient</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Ingredient] SET [Nom_Ingredient] = @Nom_Ingredient, [Allergene_Ingredient] = @Allergene_Ingredient, [Stock_Ingredient] = @Stock_Ingredient WHERE (([Id_Ingredient] = @Original_Id_Ingredient) AND ([Nom_Ingredient] = @Original_Nom_Ingredient) AND ([Allergene_Ingredient] = @Original_Allergene_Ingredient) AND ([Stock_Ingredient] = @Original_Stock_Ingredient));
SELECT Id_Ingredient, Nom_Ingredient, Allergene_Ingredient, Stock_Ingredient FROM Ingredient WHERE (Id_Ingredient = @Id_Ingredient)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Ingredient" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Allergene_Ingredient" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Allergene_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Stock_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Ingredient" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Allergene_Ingredient" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Allergene_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Stock_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Stock_Ingredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_Ingredient" ColumnName="Id_Ingredient" DataSourceName="EatInTime.dbo.Ingredient" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_Ingredient" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_Ingredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Ingredient" DataSetColumn="Id_Ingredient" />
              <Mapping SourceColumn="Nom_Ingredient" DataSetColumn="Nom_Ingredient" />
              <Mapping SourceColumn="Allergene_Ingredient" DataSetColumn="Allergene_Ingredient" />
              <Mapping SourceColumn="Stock_Ingredient" DataSetColumn="Stock_Ingredient" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlatTableAdapter" GeneratorDataComponentClassName="PlatTableAdapter" Name="Plat" UserDataComponentName="PlatTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.Plat" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Plat] WHERE (([Id_Plat] = @Original_Id_Plat) AND ([Nom_Plat] = @Original_Nom_Plat) AND ([Prix_Plat] = @Original_Prix_Plat) AND ([Id_Type_Plat] = @Original_Id_Type_Plat))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Prix_Plat" Precision="25" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Prix_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Type_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Plat] ([Nom_Plat], [Prix_Plat], [Id_Type_Plat]) VALUES (@Nom_Plat, @Prix_Plat, @Id_Type_Plat);
SELECT Id_Plat, Nom_Plat, Prix_Plat, Id_Type_Plat FROM Plat WHERE (Id_Plat = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Prix_Plat" Precision="25" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Prix_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Type_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Plat, Nom_Plat, Prix_Plat, Id_Type_Plat FROM dbo.Plat</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Plat] SET [Nom_Plat] = @Nom_Plat, [Prix_Plat] = @Prix_Plat, [Id_Type_Plat] = @Id_Type_Plat WHERE (([Id_Plat] = @Original_Id_Plat) AND ([Nom_Plat] = @Original_Nom_Plat) AND ([Prix_Plat] = @Original_Prix_Plat) AND ([Id_Type_Plat] = @Original_Id_Type_Plat));
SELECT Id_Plat, Nom_Plat, Prix_Plat, Id_Type_Plat FROM Plat WHERE (Id_Plat = @Id_Plat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Prix_Plat" Precision="25" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Prix_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Type_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Prix_Plat" Precision="25" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Prix_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Type_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_Plat" ColumnName="Id_Plat" DataSourceName="EatInTime.dbo.Plat" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_Plat" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Plat" DataSetColumn="Id_Plat" />
              <Mapping SourceColumn="Nom_Plat" DataSetColumn="Nom_Plat" />
              <Mapping SourceColumn="Prix_Plat" DataSetColumn="Prix_Plat" />
              <Mapping SourceColumn="Id_Type_Plat" DataSetColumn="Id_Type_Plat" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TablesTableAdapter" GeneratorDataComponentClassName="TablesTableAdapter" Name="Tables" UserDataComponentName="TablesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.Tables" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tables] WHERE (([Id_Table] = @Original_Id_Table) AND ([Numero_Table] = @Original_Numero_Table) AND ((@IsNull_Capacite_Table = 1 AND [Capacite_Table] IS NULL) OR ([Capacite_Table] = @Original_Capacite_Table)) AND ([Id_Emplacement] = @Original_Id_Emplacement))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Numero_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Numero_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Capacite_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacite_Table" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Capacite_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacite_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Emplacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Emplacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tables] ([Numero_Table], [Capacite_Table], [Id_Emplacement]) VALUES (@Numero_Table, @Capacite_Table, @Id_Emplacement);
SELECT Id_Table, Numero_Table, Capacite_Table, Id_Emplacement FROM Tables WHERE (Id_Table = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Numero_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Numero_Table" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Capacite_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacite_Table" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Emplacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Emplacement" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Table, Numero_Table, Capacite_Table, Id_Emplacement FROM dbo.Tables</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tables] SET [Numero_Table] = @Numero_Table, [Capacite_Table] = @Capacite_Table, [Id_Emplacement] = @Id_Emplacement WHERE (([Id_Table] = @Original_Id_Table) AND ([Numero_Table] = @Original_Numero_Table) AND ((@IsNull_Capacite_Table = 1 AND [Capacite_Table] IS NULL) OR ([Capacite_Table] = @Original_Capacite_Table)) AND ([Id_Emplacement] = @Original_Id_Emplacement));
SELECT Id_Table, Numero_Table, Capacite_Table, Id_Emplacement FROM Tables WHERE (Id_Table = @Id_Table)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Numero_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Numero_Table" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Capacite_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacite_Table" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Emplacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Emplacement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Numero_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Numero_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Capacite_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacite_Table" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Capacite_Table" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacite_Table" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Emplacement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Emplacement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_Table" ColumnName="Id_Table" DataSourceName="EatInTime.dbo.Tables" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_Table" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_Table" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Table" DataSetColumn="Id_Table" />
              <Mapping SourceColumn="Numero_Table" DataSetColumn="Numero_Table" />
              <Mapping SourceColumn="Capacite_Table" DataSetColumn="Capacite_Table" />
              <Mapping SourceColumn="Id_Emplacement" DataSetColumn="Id_Emplacement" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Type_PlatTableAdapter" GeneratorDataComponentClassName="Type_PlatTableAdapter" Name="Type_Plat" UserDataComponentName="Type_PlatTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EatInTimeConnectionString (Settings)" DbObjectName="EatInTime.dbo.Type_Plat" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Type_Plat] WHERE (([Id_Type_Plat] = @Original_Id_Type_Plat) AND ([Nom_Type_Plat] = @Original_Nom_Type_Plat))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Type_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Type_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Type_Plat] ([Nom_Type_Plat]) VALUES (@Nom_Type_Plat);
SELECT Id_Type_Plat, Nom_Type_Plat FROM Type_Plat WHERE (Id_Type_Plat = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Type_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Type_Plat, Nom_Type_Plat FROM dbo.Type_Plat</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Type_Plat] SET [Nom_Type_Plat] = @Nom_Type_Plat WHERE (([Id_Type_Plat] = @Original_Id_Type_Plat) AND ([Nom_Type_Plat] = @Original_Nom_Type_Plat));
SELECT Id_Type_Plat, Nom_Type_Plat FROM Type_Plat WHERE (Id_Type_Plat = @Id_Type_Plat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom_Type_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_Type_Plat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom_Type_Plat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_Type_Plat" ColumnName="Id_Type_Plat" DataSourceName="EatInTime.dbo.Type_Plat" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_Type_Plat" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_Type_Plat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Type_Plat" DataSetColumn="Id_Type_Plat" />
              <Mapping SourceColumn="Nom_Type_Plat" DataSetColumn="Nom_Type_Plat" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EatInTimeDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EatInTimeDataSet" msprop:Generator_UserDSName="EatInTimeDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Avancement" msprop:Generator_TableClassName="AvancementDataTable" msprop:Generator_TableVarName="tableAvancement" msprop:Generator_TablePropName="Avancement" msprop:Generator_RowDeletingName="AvancementRowDeleting" msprop:Generator_RowChangingName="AvancementRowChanging" msprop:Generator_RowEvHandlerName="AvancementRowChangeEventHandler" msprop:Generator_RowDeletedName="AvancementRowDeleted" msprop:Generator_UserTableName="Avancement" msprop:Generator_RowChangedName="AvancementRowChanged" msprop:Generator_RowEvArgName="AvancementRowChangeEvent" msprop:Generator_RowClassName="AvancementRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Avancement" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_Avancement" msprop:Generator_ColumnPropNameInRow="Id_Avancement" msprop:Generator_ColumnPropNameInTable="Id_AvancementColumn" msprop:Generator_UserColumnName="Id_Avancement" type="xs:int" />
              <xs:element name="Nom_Avancement" msprop:Generator_ColumnVarNameInTable="columnNom_Avancement" msprop:Generator_ColumnPropNameInRow="Nom_Avancement" msprop:Generator_ColumnPropNameInTable="Nom_AvancementColumn" msprop:Generator_UserColumnName="Nom_Avancement">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Commande" msprop:Generator_TableClassName="CommandeDataTable" msprop:Generator_TableVarName="tableCommande" msprop:Generator_TablePropName="Commande" msprop:Generator_RowDeletingName="CommandeRowDeleting" msprop:Generator_RowChangingName="CommandeRowChanging" msprop:Generator_RowEvHandlerName="CommandeRowChangeEventHandler" msprop:Generator_RowDeletedName="CommandeRowDeleted" msprop:Generator_UserTableName="Commande" msprop:Generator_RowChangedName="CommandeRowChanged" msprop:Generator_RowEvArgName="CommandeRowChangeEvent" msprop:Generator_RowClassName="CommandeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Commande" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_Commande" msprop:Generator_ColumnPropNameInRow="Id_Commande" msprop:Generator_ColumnPropNameInTable="Id_CommandeColumn" msprop:Generator_UserColumnName="Id_Commande" type="xs:int" />
              <xs:element name="Date_Commande" msprop:Generator_ColumnVarNameInTable="columnDate_Commande" msprop:Generator_ColumnPropNameInRow="Date_Commande" msprop:Generator_ColumnPropNameInTable="Date_CommandeColumn" msprop:Generator_UserColumnName="Date_Commande" type="xs:dateTime" />
              <xs:element name="Id_Avancement" msprop:Generator_ColumnVarNameInTable="columnId_Avancement" msprop:Generator_ColumnPropNameInRow="Id_Avancement" msprop:Generator_ColumnPropNameInTable="Id_AvancementColumn" msprop:Generator_UserColumnName="Id_Avancement" type="xs:int" />
              <xs:element name="Id_Table" msprop:Generator_ColumnVarNameInTable="columnId_Table" msprop:Generator_ColumnPropNameInRow="Id_Table" msprop:Generator_ColumnPropNameInTable="Id_TableColumn" msprop:Generator_UserColumnName="Id_Table" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="contient" msprop:Generator_TableClassName="contientDataTable" msprop:Generator_TableVarName="tablecontient" msprop:Generator_TablePropName="contient" msprop:Generator_RowDeletingName="contientRowDeleting" msprop:Generator_RowChangingName="contientRowChanging" msprop:Generator_RowEvHandlerName="contientRowChangeEventHandler" msprop:Generator_RowDeletedName="contientRowDeleted" msprop:Generator_UserTableName="contient" msprop:Generator_RowChangedName="contientRowChanged" msprop:Generator_RowEvArgName="contientRowChangeEvent" msprop:Generator_RowClassName="contientRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Commande" msprop:Generator_ColumnVarNameInTable="columnId_Commande" msprop:Generator_ColumnPropNameInRow="Id_Commande" msprop:Generator_ColumnPropNameInTable="Id_CommandeColumn" msprop:Generator_UserColumnName="Id_Commande" type="xs:int" />
              <xs:element name="Id_Plat" msprop:Generator_ColumnVarNameInTable="columnId_Plat" msprop:Generator_ColumnPropNameInRow="Id_Plat" msprop:Generator_ColumnPropNameInTable="Id_PlatColumn" msprop:Generator_UserColumnName="Id_Plat" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Emplacement" msprop:Generator_TableClassName="EmplacementDataTable" msprop:Generator_TableVarName="tableEmplacement" msprop:Generator_TablePropName="Emplacement" msprop:Generator_RowDeletingName="EmplacementRowDeleting" msprop:Generator_RowChangingName="EmplacementRowChanging" msprop:Generator_RowEvHandlerName="EmplacementRowChangeEventHandler" msprop:Generator_RowDeletedName="EmplacementRowDeleted" msprop:Generator_UserTableName="Emplacement" msprop:Generator_RowChangedName="EmplacementRowChanged" msprop:Generator_RowEvArgName="EmplacementRowChangeEvent" msprop:Generator_RowClassName="EmplacementRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Emplacement" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_Emplacement" msprop:Generator_ColumnPropNameInRow="Id_Emplacement" msprop:Generator_ColumnPropNameInTable="Id_EmplacementColumn" msprop:Generator_UserColumnName="Id_Emplacement" type="xs:int" />
              <xs:element name="Nom_Emplacement" msprop:Generator_ColumnVarNameInTable="columnNom_Emplacement" msprop:Generator_ColumnPropNameInRow="Nom_Emplacement" msprop:Generator_ColumnPropNameInTable="Nom_EmplacementColumn" msprop:Generator_UserColumnName="Nom_Emplacement">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="est_compose" msprop:Generator_TableClassName="est_composeDataTable" msprop:Generator_TableVarName="tableest_compose" msprop:Generator_TablePropName="est_compose" msprop:Generator_RowDeletingName="est_composeRowDeleting" msprop:Generator_RowChangingName="est_composeRowChanging" msprop:Generator_RowEvHandlerName="est_composeRowChangeEventHandler" msprop:Generator_RowDeletedName="est_composeRowDeleted" msprop:Generator_UserTableName="est_compose" msprop:Generator_RowChangedName="est_composeRowChanged" msprop:Generator_RowEvArgName="est_composeRowChangeEvent" msprop:Generator_RowClassName="est_composeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Plat" msprop:Generator_ColumnVarNameInTable="columnId_Plat" msprop:Generator_ColumnPropNameInRow="Id_Plat" msprop:Generator_ColumnPropNameInTable="Id_PlatColumn" msprop:Generator_UserColumnName="Id_Plat" type="xs:int" />
              <xs:element name="Id_Ingredient" msprop:Generator_ColumnVarNameInTable="columnId_Ingredient" msprop:Generator_ColumnPropNameInRow="Id_Ingredient" msprop:Generator_ColumnPropNameInTable="Id_IngredientColumn" msprop:Generator_UserColumnName="Id_Ingredient" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ingredient" msprop:Generator_TableClassName="IngredientDataTable" msprop:Generator_TableVarName="tableIngredient" msprop:Generator_TablePropName="Ingredient" msprop:Generator_RowDeletingName="IngredientRowDeleting" msprop:Generator_RowChangingName="IngredientRowChanging" msprop:Generator_RowEvHandlerName="IngredientRowChangeEventHandler" msprop:Generator_RowDeletedName="IngredientRowDeleted" msprop:Generator_UserTableName="Ingredient" msprop:Generator_RowChangedName="IngredientRowChanged" msprop:Generator_RowEvArgName="IngredientRowChangeEvent" msprop:Generator_RowClassName="IngredientRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Ingredient" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_Ingredient" msprop:Generator_ColumnPropNameInRow="Id_Ingredient" msprop:Generator_ColumnPropNameInTable="Id_IngredientColumn" msprop:Generator_UserColumnName="Id_Ingredient" type="xs:int" />
              <xs:element name="Nom_Ingredient" msprop:Generator_ColumnVarNameInTable="columnNom_Ingredient" msprop:Generator_ColumnPropNameInRow="Nom_Ingredient" msprop:Generator_ColumnPropNameInTable="Nom_IngredientColumn" msprop:Generator_UserColumnName="Nom_Ingredient">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Allergene_Ingredient" msprop:Generator_ColumnVarNameInTable="columnAllergene_Ingredient" msprop:Generator_ColumnPropNameInRow="Allergene_Ingredient" msprop:Generator_ColumnPropNameInTable="Allergene_IngredientColumn" msprop:Generator_UserColumnName="Allergene_Ingredient" type="xs:boolean" />
              <xs:element name="Stock_Ingredient" msprop:Generator_ColumnVarNameInTable="columnStock_Ingredient" msprop:Generator_ColumnPropNameInRow="Stock_Ingredient" msprop:Generator_ColumnPropNameInTable="Stock_IngredientColumn" msprop:Generator_UserColumnName="Stock_Ingredient" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Plat" msprop:Generator_TableClassName="PlatDataTable" msprop:Generator_TableVarName="tablePlat" msprop:Generator_TablePropName="Plat" msprop:Generator_RowDeletingName="PlatRowDeleting" msprop:Generator_RowChangingName="PlatRowChanging" msprop:Generator_RowEvHandlerName="PlatRowChangeEventHandler" msprop:Generator_RowDeletedName="PlatRowDeleted" msprop:Generator_UserTableName="Plat" msprop:Generator_RowChangedName="PlatRowChanged" msprop:Generator_RowEvArgName="PlatRowChangeEvent" msprop:Generator_RowClassName="PlatRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Plat" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_Plat" msprop:Generator_ColumnPropNameInRow="Id_Plat" msprop:Generator_ColumnPropNameInTable="Id_PlatColumn" msprop:Generator_UserColumnName="Id_Plat" type="xs:int" />
              <xs:element name="Nom_Plat" msprop:Generator_ColumnVarNameInTable="columnNom_Plat" msprop:Generator_ColumnPropNameInRow="Nom_Plat" msprop:Generator_ColumnPropNameInTable="Nom_PlatColumn" msprop:Generator_UserColumnName="Nom_Plat">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Prix_Plat" msprop:Generator_ColumnVarNameInTable="columnPrix_Plat" msprop:Generator_ColumnPropNameInRow="Prix_Plat" msprop:Generator_ColumnPropNameInTable="Prix_PlatColumn" msprop:Generator_UserColumnName="Prix_Plat" type="xs:decimal" />
              <xs:element name="Id_Type_Plat" msprop:Generator_ColumnVarNameInTable="columnId_Type_Plat" msprop:Generator_ColumnPropNameInRow="Id_Type_Plat" msprop:Generator_ColumnPropNameInTable="Id_Type_PlatColumn" msprop:Generator_UserColumnName="Id_Type_Plat" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tables" msprop:Generator_TableClassName="TablesDataTable" msprop:Generator_TableVarName="tableTables" msprop:Generator_TablePropName="_Tables" msprop:Generator_RowDeletingName="TablesRowDeleting" msprop:Generator_RowChangingName="TablesRowChanging" msprop:Generator_RowEvHandlerName="TablesRowChangeEventHandler" msprop:Generator_RowDeletedName="TablesRowDeleted" msprop:Generator_UserTableName="Tables" msprop:Generator_RowChangedName="TablesRowChanged" msprop:Generator_RowEvArgName="TablesRowChangeEvent" msprop:Generator_RowClassName="TablesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Table" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_Table" msprop:Generator_ColumnPropNameInRow="Id_Table" msprop:Generator_ColumnPropNameInTable="Id_TableColumn" msprop:Generator_UserColumnName="Id_Table" type="xs:int" />
              <xs:element name="Numero_Table" msprop:Generator_ColumnVarNameInTable="columnNumero_Table" msprop:Generator_ColumnPropNameInRow="Numero_Table" msprop:Generator_ColumnPropNameInTable="Numero_TableColumn" msprop:Generator_UserColumnName="Numero_Table" type="xs:int" />
              <xs:element name="Capacite_Table" msprop:Generator_ColumnVarNameInTable="columnCapacite_Table" msprop:Generator_ColumnPropNameInRow="Capacite_Table" msprop:Generator_ColumnPropNameInTable="Capacite_TableColumn" msprop:Generator_UserColumnName="Capacite_Table" type="xs:int" minOccurs="0" />
              <xs:element name="Id_Emplacement" msprop:Generator_ColumnVarNameInTable="columnId_Emplacement" msprop:Generator_ColumnPropNameInRow="Id_Emplacement" msprop:Generator_ColumnPropNameInTable="Id_EmplacementColumn" msprop:Generator_UserColumnName="Id_Emplacement" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Type_Plat" msprop:Generator_TableClassName="Type_PlatDataTable" msprop:Generator_TableVarName="tableType_Plat" msprop:Generator_TablePropName="Type_Plat" msprop:Generator_RowDeletingName="Type_PlatRowDeleting" msprop:Generator_RowChangingName="Type_PlatRowChanging" msprop:Generator_RowEvHandlerName="Type_PlatRowChangeEventHandler" msprop:Generator_RowDeletedName="Type_PlatRowDeleted" msprop:Generator_UserTableName="Type_Plat" msprop:Generator_RowChangedName="Type_PlatRowChanged" msprop:Generator_RowEvArgName="Type_PlatRowChangeEvent" msprop:Generator_RowClassName="Type_PlatRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Type_Plat" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_Type_Plat" msprop:Generator_ColumnPropNameInRow="Id_Type_Plat" msprop:Generator_ColumnPropNameInTable="Id_Type_PlatColumn" msprop:Generator_UserColumnName="Id_Type_Plat" type="xs:int" />
              <xs:element name="Nom_Type_Plat" msprop:Generator_ColumnVarNameInTable="columnNom_Type_Plat" msprop:Generator_ColumnPropNameInRow="Nom_Type_Plat" msprop:Generator_ColumnPropNameInTable="Nom_Type_PlatColumn" msprop:Generator_UserColumnName="Nom_Type_Plat">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Avancement" />
      <xs:field xpath="mstns:Id_Avancement" />
    </xs:unique>
    <xs:unique name="Commande_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Commande" />
      <xs:field xpath="mstns:Id_Commande" />
    </xs:unique>
    <xs:unique name="contient_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:contient" />
      <xs:field xpath="mstns:Id_Commande" />
      <xs:field xpath="mstns:Id_Plat" />
    </xs:unique>
    <xs:unique name="Emplacement_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Emplacement" />
      <xs:field xpath="mstns:Id_Emplacement" />
    </xs:unique>
    <xs:unique name="est_compose_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:est_compose" />
      <xs:field xpath="mstns:Id_Plat" />
      <xs:field xpath="mstns:Id_Ingredient" />
    </xs:unique>
    <xs:unique name="Ingredient_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ingredient" />
      <xs:field xpath="mstns:Id_Ingredient" />
    </xs:unique>
    <xs:unique name="Plat_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Plat" />
      <xs:field xpath="mstns:Id_Plat" />
    </xs:unique>
    <xs:unique name="Tables_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tables" />
      <xs:field xpath="mstns:Id_Table" />
    </xs:unique>
    <xs:unique name="Type_Plat_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Type_Plat" />
      <xs:field xpath="mstns:Id_Type_Plat" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Commande_Id_Avancement" msdata:parent="Avancement" msdata:child="Commande" msdata:parentkey="Id_Avancement" msdata:childkey="Id_Avancement" msprop:Generator_UserChildTable="Commande" msprop:Generator_ChildPropName="GetCommandeRows" msprop:Generator_UserRelationName="FK_Commande_Id_Avancement" msprop:Generator_ParentPropName="AvancementRow" msprop:Generator_RelationVarName="relationFK_Commande_Id_Avancement" msprop:Generator_UserParentTable="Avancement" />
      <msdata:Relationship name="FK_Commande_Id_Table" msdata:parent="Tables" msdata:child="Commande" msdata:parentkey="Id_Table" msdata:childkey="Id_Table" msprop:Generator_UserChildTable="Commande" msprop:Generator_ChildPropName="GetCommandeRows" msprop:Generator_UserRelationName="FK_Commande_Id_Table" msprop:Generator_RelationVarName="relationFK_Commande_Id_Table" msprop:Generator_UserParentTable="Tables" msprop:Generator_ParentPropName="TablesRow" />
      <msdata:Relationship name="FK_contient_Id_Commande" msdata:parent="Commande" msdata:child="contient" msdata:parentkey="Id_Commande" msdata:childkey="Id_Commande" msprop:Generator_UserChildTable="contient" msprop:Generator_ChildPropName="GetcontientRows" msprop:Generator_UserRelationName="FK_contient_Id_Commande" msprop:Generator_ParentPropName="CommandeRow" msprop:Generator_RelationVarName="relationFK_contient_Id_Commande" msprop:Generator_UserParentTable="Commande" />
      <msdata:Relationship name="FK_contient_Id_Plat" msdata:parent="Plat" msdata:child="contient" msdata:parentkey="Id_Plat" msdata:childkey="Id_Plat" msprop:Generator_UserChildTable="contient" msprop:Generator_ChildPropName="GetcontientRows" msprop:Generator_UserRelationName="FK_contient_Id_Plat" msprop:Generator_RelationVarName="relationFK_contient_Id_Plat" msprop:Generator_UserParentTable="Plat" msprop:Generator_ParentPropName="PlatRow" />
      <msdata:Relationship name="FK_est_compose_Id_Ingredient" msdata:parent="Ingredient" msdata:child="est_compose" msdata:parentkey="Id_Ingredient" msdata:childkey="Id_Ingredient" msprop:Generator_UserChildTable="est_compose" msprop:Generator_ChildPropName="Getest_composeRows" msprop:Generator_UserRelationName="FK_est_compose_Id_Ingredient" msprop:Generator_RelationVarName="relationFK_est_compose_Id_Ingredient" msprop:Generator_UserParentTable="Ingredient" msprop:Generator_ParentPropName="IngredientRow" />
      <msdata:Relationship name="FK_est_compose_Id_Plat" msdata:parent="Plat" msdata:child="est_compose" msdata:parentkey="Id_Plat" msdata:childkey="Id_Plat" msprop:Generator_UserChildTable="est_compose" msprop:Generator_ChildPropName="Getest_composeRows" msprop:Generator_UserRelationName="FK_est_compose_Id_Plat" msprop:Generator_RelationVarName="relationFK_est_compose_Id_Plat" msprop:Generator_UserParentTable="Plat" msprop:Generator_ParentPropName="PlatRow" />
      <msdata:Relationship name="FK_Plat_Id_Type_Plat" msdata:parent="Type_Plat" msdata:child="Plat" msdata:parentkey="Id_Type_Plat" msdata:childkey="Id_Type_Plat" msprop:Generator_UserChildTable="Plat" msprop:Generator_ChildPropName="GetPlatRows" msprop:Generator_UserRelationName="FK_Plat_Id_Type_Plat" msprop:Generator_RelationVarName="relationFK_Plat_Id_Type_Plat" msprop:Generator_UserParentTable="Type_Plat" msprop:Generator_ParentPropName="Type_PlatRow" />
      <msdata:Relationship name="FK_Tables_Id_Emplacement" msdata:parent="Emplacement" msdata:child="Tables" msdata:parentkey="Id_Emplacement" msdata:childkey="Id_Emplacement" msprop:Generator_UserChildTable="Tables" msprop:Generator_ChildPropName="GetTablesRows" msprop:Generator_UserRelationName="FK_Tables_Id_Emplacement" msprop:Generator_ParentPropName="EmplacementRow" msprop:Generator_RelationVarName="relationFK_Tables_Id_Emplacement" msprop:Generator_UserParentTable="Emplacement" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>